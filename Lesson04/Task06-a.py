"""=====================================================================================================================
6. Реализовать два небольших скрипта:
а) итератор, генерирующий целые числа, начиная с указанного,
б) итератор, повторяющий элементы некоторого списка, определенного заранее.

Подсказка: использовать функцию count() и cycle() модуля itertools.
Обратите внимание, что создаваемый цикл не должен быть бесконечным. Необходимо предусмотреть условие его завершения.

Например, в первом задании выводим целые числа, начиная с 3, а при достижении числа 10 завершаем цикл.
Во втором также необходимо предусмотреть условие, при котором повторение элементов списка будет прекращено.
====================================================================================================================="""
from itertools import count
from typing import Callable

def get_count_list(func: Callable, start, stop) -> list:
    """
    Возвращает список чисел сгенерированных с помощью функции my_count в цикле for
    Генерация происходит до stop
    :param func: функция создающая генератор
    :param start: число с которого начинается генерация
    :param stop: число до которого происходит генерация
    :return: сгенерированный список
    """
    items = []

    for item in func(start, 1):
        if item >= stop:
            break

        items.append(item)

    return items

if __name__ == '__main__':
    print('========= Задание 6. Итератор, генерирующий целые числа, начиная с указанного =========')
while True:
    try:
        start = int(input(f'Введите число,  с которого нужно выводить числа:'))
        stop = int(input(f'Введите число,  при достижении которого необходимо завершить цикл:'))
        break
    except ValueError:
        print('Введены некорректные данные. Повторите ввод.')
        continue

itertools_count_list = get_count_list(count, start, stop)
print(f'Сгенерированный список:', itertools_count_list)
